<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
 xmlns:context="http://www.springframework.org/schema/context"
 xmlns:security="http://www.springframework.org/schema/security"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="
 http://www.springframework.org/schema/beans
 http://www.springframework.org/schema/beans/spring-beans.xsd
 http://www.springframework.org/schema/context
 http://www.springframework.org/schema/context/spring-context.xsd
 http://www.springframework.org/schema/security
 http://www.springframework.org/schema/security/spring-security.xsd">
 
 <context:component-scan base-package="org.keycloak.adapters.springsecurity"/> 
 <security:authentication-manager alias="authenticationManager">
 <security:authentication-provider ref="keycloakAuthenticationProvider" />
 </security:authentication-manager>
<bean id="adapterDeploymentContextBean"
 class="org.keycloak.adapters.springsecurity.AdapterDeploymentContextBean" />
 <bean id="keycloakAuthenticationEntryPoint" class="org.keycloak.adapters.springsecurity.authentication.KeycloakAuthenticationEntryPoint" />
 <bean id="keycloakAuthenticationProvider" class="org.keycloak.adapters.springsecurity.authentication.KeycloakAuthenticationProvider" />
 <bean id="keycloakPreAuthActionsFilter" class="org.keycloak.adapters.springsecurity.filter.KeycloakPreAuthActionsFilter" />
 <bean id="keycloakAuthenticationProcessingFilter"
 class="org.keycloak.adapters.springsecurity.filter.KeycloakAuthenticationProcessingFilter">
 <constructor-arg name="authenticationManager"
 ref="authenticationManager" />
 </bean>
 <bean id="keycloakLogoutHandler"
 class="org.keycloak.adapters.springsecurity.authentication.KeycloakLogoutHandler">
 <constructor-arg ref="adapterDeploymentContextBean" />
 </bean>
 <bean id="logoutFilter"
 class="org.springframework.security.web.authentication.logout.LogoutFilter">
 <constructor-arg name="logoutSuccessUrl" value="/" />
 <constructor-arg name="handlers">
 <list>
 <ref bean="keycloakLogoutHandler" />
 <bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
 </list>
 </constructor-arg>
 <property name="logoutRequestMatcher">
 <bean
 class="org.springframework.security.web.util.matcher.AntPathRequestMatcher">
 <constructor-arg name="pattern" value="/sso/logout**" />
 <constructor-arg name="httpMethod" value="GET" />
 </bean>
 </property>
 </bean>
 <security:http use-expressions="true" auto-config="false" entry-point-ref="keycloakAuthenticationEntryPoint">
  <security:custom-filter ref="keycloakPreAuthActionsFilter"
 before="LOGOUT_FILTER" />
 <security:custom-filter ref="keycloakAuthenticationProcessingFilter"
 before="FORM_LOGIN_FILTER" />
 
 <security:csrf disabled="true"/>  
 
 
 
 <!--Adding pattern filters for the role and page mappings -->
 
<security:intercept-url pattern="/api/{version}/health" access="permitAll" method="GET" /> 
<security:intercept-url pattern="/api/{version}/fetchMapping/{index}/{type}" access="hasAnyRole('ROLE_PCM_ADMIN','PCM_ADMIN','PCM_IMAGE')" method="GET" />
<security:intercept-url pattern="/api/{version}/filters/styles/query" access="hasAnyRole('ROLE_PCM_ADMIN','PCM_ADMIN','PCM_IMAGE')" method="POST" />
<security:intercept-url pattern="/api/{version}/search/styles/query" access="hasAnyRole('ROLE_PCM_ADMIN','PCM_ADMIN','PCM_IMAGE')" method="POST" />
<security:intercept-url pattern="/api/{version}/**" access="hasAnyRole('ROLE_PCM_ADMIN','PCM_ADMIN','PCM_IMAGE')" method="POST" />
 
 <!--  Other roles can be added below. Do mind the order in which these roles are being added. -->
 <!-- <security:intercept-url pattern="/your/url/pattern" access="hasRole('ROLE_NewRole')" />  -->
 <security:custom-filter ref="logoutFilter" position="LOGOUT_FILTER" />
 </security:http>
</beans>